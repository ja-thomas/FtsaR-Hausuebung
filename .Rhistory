delta <- c(1,2,3,4)
param_set <- expand.grid(cond.dist, delta, stringsAsFactors = FALSE)
garch_models <- mapply(FUN = garchFit, cond.dist = param_set$Var1,
delta = param_set$Var2,
MoreArgs = list(data = data, trace=FALSE))
best_model <- which.min(lapply(garch_models, function(x) x@fit$ics[2]))
print(paste('best distribution: ', param_set[best_model, 1]))
print(paste('with best delta: ', param_set[best_model, 2]))
garchFit(data = data, cond.dist = param_set[best_model,1],
delta =  param_set[best_model, 2], trace = FALSE)
}
(rvow_garch <- get_best_garch(rvow_arima_res))
get_best_garch <- function(data){
cond.dist <- c("norm", "snorm", "std")
delta <- c(1,2,3,4)
param_set <- expand.grid(cond.dist, delta, stringsAsFactors = FALSE)
garch_models <- mapply(FUN = garchFit, cond.dist = param_set$Var1,
delta = param_set$Var2,
MoreArgs = list(data = data, trace=FALSE))
best_model <- which.min(lapply(garch_models, function(x) x@fit$ics[2]))
print(paste('best distribution: ', param_set[best_model, 1]))
print(paste('with best delta: ', param_set[best_model, 2]))
garchFit(data = data, cond.dist = param_set[best_model,1],
delta =  param_set[best_model, 2], trace = FALSE)
}
(rvow_garch <- get_best_garch(rvow_arima_res))
get_best_garch <- function(data){
try_garch <- function(...){
arguments <- list(...)
tryCatch(do.call(garchFit, arguments), error = function(r) NA)
}
cond.dist <- c("norm", "snorm", "std")
delta <- c(1,2,3,4)
param_set <- expand.grid(cond.dist, delta, stringsAsFactors = FALSE)
garch_models <- mapply(FUN = try_garch, cond.dist = param_set$Var1,
delta = param_set$Var2,
MoreArgs = list(data = data, trace=FALSE))
best_model <- which.min(lapply(garch_models, function(x) x@fit$ics[2]))
print(paste('best distribution: ', param_set[best_model, 1]))
print(paste('with best delta: ', param_set[best_model, 2]))
garchFit(data = data, cond.dist = param_set[best_model,1],
delta =  param_set[best_model, 2], trace = FALSE)
}
(rvow_garch <- get_best_garch(rvow_arima_res))
debug(get_best_garch)
(rvow_garch <- get_best_garch(rvow_arima_res))
garch_models
[[1]]
garch_models[[1]]
garch_models[[2]]
garch_models[[3]]
garch_models[[4]]
garch_models[[5]]
garch_models[[6]]
garch_models[[7]]
garch_models[[8]]
garch_models[[9]]
garch_models[[10]]
garch_models[[11]]
garch_models[[12]]
garch_models[[13]]
lapply(garch_models, function(x) x@fit$ics[2])
lapply(garch_models, function(x) tryCatch(x@fit$ics[2], error = function(e) NA))
which.min(lapply(garch_models, function(x) tryCatch(x@fit$ics[2], error = function(e) NA)))
get_best_garch <- function(data){
try_garch <- function(...){
arguments <- list(...)
tryCatch(do.call(garchFit, arguments), error = function(r) NA)
}
cond.dist <- c("norm", "snorm", "std")
delta <- c(1,2,3,4)
param_set <- expand.grid(cond.dist, delta, stringsAsFactors = FALSE)
garch_models <- mapply(FUN = try_garch, cond.dist = param_set$Var1,
delta = param_set$Var2,
MoreArgs = list(data = data, trace=FALSE))
best_model <- which.min(lapply(garch_models, function(x) tryCatch(x@fit$ics[2], error = function(e) NA)))
print(paste('best distribution: ', param_set[best_model, 1]))
print(paste('with best delta: ', param_set[best_model, 2]))
garchFit(data = data, cond.dist = param_set[best_model,1],
delta =  param_set[best_model, 2], trace = FALSE)
}
(rvow_garch <- get_best_garch(rvow_arima_res))
get_best_garch <- function(data){
try_garch <- function(...){
arguments <- list(...)
tryCatch(do.call(garchFit, arguments), error = function(r) NA)
}
cond.dist <- c("norm", "snorm", "ged", "sged", "std", "sstd", "snig", "QMLE")
delta <- c(1,2,3,4)
param_set <- expand.grid(cond.dist, delta, stringsAsFactors = FALSE)
garch_models <- mapply(FUN = try_garch, cond.dist = param_set$Var1,
delta = param_set$Var2,
MoreArgs = list(data = data, trace=FALSE))
best_model <- which.min(lapply(garch_models, function(x) tryCatch(x@fit$ics[2], error = function(e) NA)))
print(paste('best distribution: ', param_set[best_model, 1]))
print(paste('with best delta: ', param_set[best_model, 2]))
garchFit(data = data, cond.dist = param_set[best_model,1],
delta =  param_set[best_model, 2], trace = FALSE)
}
(rvow_garch <- get_best_garch(rvow_arima_res))
rvow_garch@fitted
rvow_garch@description
rvow_garch@fit$par
ts.plot(rvow, ylim=c(-.2,.2))
lines(quants <- qstd(.01, mean=rvow_garch@fit$par[1], sd=rvow_garch@sigma.t), nu = rvow_garch@fit$par[5],col=2)
lines(quants <- qstd(.01, mean=rvow_garch@fit$par[1], sd=rvow_garch@sigma.t, nu = rvow_garch@fit$par[5]), col=2)
qstd(.01, mean=rvow_garch@fit$par[1], sd=rvow_garch@sigma.t, nu = rvow_garch@fit$par[5])
dev.off()
ts.plot(rvow, ylim=c(-.2,.2))
qstd(.01, mean=rvow_garch@fit$par[1], sd=rvow_garch@sigma.t, nu = rvow_garch@fit$par[5])
lines(quants <- qstd(.01, mean=rvow_garch@fit$par[1], sd=rvow_garch@sigma.t, nu = rvow_garch@fit$par[5]), col=2)
rvow_garch@fit$par[1]
rvow_garch@sigma.t
length(rvow_arima_res)
ts.plot(rvow_arima_res, ylim=c(-.2,.2))
lines(quants <- qstd(.01, mean=rvow_garch@fit$par[1], sd=rvow_garch@sigma.t, nu = rvow_garch@fit$par[5]), col=2)
sum(rvow_arima_res < quants)
sum(rvow_arima_res < quants)/length(rvow_arima_res)
points(which(rvow_arima_res < quants),
rvow_arima_res[which(rvow_arima_res < quants)], pch=16, col=2)
sum(rvow_arima_res < quants)
sum(rvow_arima_res < quants)/length(rvow_arima_res)
(rdai_garch <- get_best_garch(rdai_arima_res))
rdai_garch@fit$ics
ts.plot(rdai_arima_res, ylim=c(-.2,.2))
lines(quants <- qged(.01, mean=rdai_garch@fit$par[1], sd=rdai_garch@sigma.t,
nu = rdai_garch@fit$par[5]), col=2)
points(which(rdai_arima_res < quants),
rdai_arima_res[which(rdai_arima_res < quants)], pch=16, col=2)
sum(rdai_arima_res < quants)
sum(rdai_arima_res < quants)/length(rvow_arima_res)
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 2000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*y[i]^2 + p[4]*tail(m@sigma.t,1)
#print(k)
k <- k+1
}
pars
}
parameters_rvow_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "std")
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*model[i]^2 + p[4]*tail(m@sigma.t,1)
print(k)
k <- k+1
}
pars
}
parameters_rvow_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "std")
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*data[i]^2 + p[4]*tail(m@sigma.t,1)
print(k)
k <- k+1
}
pars
}
parameters_rvow_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "std")
pars.zoo <- zoo(pars)
pars.zoo <- zoo(parameters_rvow_garch)
plot(pars.zoo)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged")
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
tryCatch({
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*data[i]^2 + p[4]*tail(m@sigma.t,1)
}, error = function(e) pars[k, ] <- NA)
print(k)
k <- k+1
}
pars
}
plot(parameters_rvow_garch)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged")
plot(zoo(parameters_rdai_garch))
plot(zoo(parameters_rvow_garch))
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
tryCatch({
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*data[i]^2 + p[4]*tail(m@sigma.t,1)
}, error = function(e){
warning(paste("error in run: ", k))
pars[k, ] <- NA)
}
print(k)
k <- k+1
}
pars
}
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
tryCatch({
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*data[i]^2 + p[4]*tail(m@sigma.t,1)
}, error = function(e){
warning(paste("error in run: ", k))
pars[k, ] <- NA
})
print(k)
k <- k+1
}
pars
}
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 1000, Tmax = 1500)
plot(zoo(parameters_rdai_garch))
parameters_rdai_garch
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
tryCatch({
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*data[i]^2 + p[4]*tail(m@sigma.t,1)
}, error = function(e){
print(paste("error in run: ", k))
pars[k, ] <- NA
})
print(k)
k <- k+1
}
pars
}
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 1000, Tmax = 1500)
oos_estimation <- function(data, model, dist, orig = 500, Tmax = 1000){
k <- 1
pars <- matrix(nrow=Tmax-orig, ncol=6,
dimnames=list(NULL, c(names(model@fit$par),"sigma.t")))
for(i in orig:(Tmax-1)){
tryCatch({
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
p <- m@fit$par
pars[k,1:5] <- p
pars[k,6] <- p[2] + p[3]*data[i]^2 + p[4]*tail(m@sigma.t,1)
print(k)
}, error = function(e){
print(paste("error in run: ", k))
pars[k, ] <- NA
})
k <- k+1
}
pars
}
debug(oos_estimation)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 1000, Tmax = 1500)
pars
m <- garchFit(~ garch(1,1), data=as.data.frame(data[1:i]), trace=FALSE,
cond.dist=dist)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 500, Tmax = 800)
undebug(oos_estimation)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 500, Tmax = 800)
rvow_arima_res[720]
rvow_arima_res[721]
rvow_arima_res[719]
plot(rvow_arima_res[700:740])
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 750, Tmax = 1250)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 751, Tmax = 1250)
parameters_rdai_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "ged",
orig = 1500, Tmax = 2000)
parameters_rdai_garch <- oos_estimation(data = rdai_arima_res,
model = rdai_garch, dist = "ged",
orig = 1500, Tmax = 2000)
ts.plot(rvow_arima_res)
lines(quants <- qstd(0.01, mean=parameters_rvow_garch[1], sd=parameters_rvow_garch[6],
nu = parameters_rvow_garch[5]), col = 2)
quants
ts.plot(rvow_arima_res)
lines(quants <- qstd(0.01, mean=parameters_rvow_garch[,1], sd=parameters_rvow_garch[,6],
nu = parameters_rvow_garch[,5]), col = 2)
ts.plot(rvow_arima_res[500:1000])
lines(quants <- qstd(0.01, mean=parameters_rvow_garch[,1], sd=parameters_rvow_garch[,6],
nu = parameters_rvow_garch[,5]), col = 2)
sum(rvow_arima_res < quants)
c(1,2,3,4)[1,2]
c(1,2,3,4)[1:2]
c(1,2,3,4)[1:2][2]
points(which(rvow_arima_res[500:1000] < quants),
rvow_arima_res[500:1000][which(rvow_arima_res < quants)], pch=16, col=2)
which(rvow_arima_res[500:1000] < quants)
length(quants)
rvow_arima_res[500:1000]
length(rvow_arima_res[500:1000])
ts.plot(rvow_arima_res[501:1000])
lines(quants <- qstd(0.01, mean=parameters_rvow_garch[,1], sd=parameters_rvow_garch[,6],
nu = parameters_rvow_garch[,5]), col = 2)
points(which(rvow_arima_res[501:1000] < quants),
rvow_arima_res[501:1000][which(rvow_arima_res < quants)], pch=16, col=2)
length(pars)
sum(rvow_arima_res[501:1000] < quants)
sum(rvow_arima_res[501:1000] < quants)/length(rvow_arima_res[501:1000])
nrow(parameters_rvow_garch)
orig = 1500
Tmax = 2000
parameters_rvow_garch <- oos_estimation(data = rvow_arima_res,
model = rvow_garch, dist = "std",
orig = orig, Tmax = Tmax)
plot(zoo(parameters_rvow_garch))
ts.plot(rvow_arima_res[orig+1:Tmax])
lines(quants <- qstd(0.01, mean=parameters_rvow_garch[,1], sd=parameters_rvow_garch[,6],
nu = parameters_rvow_garch[,5]), col = 2)
points(which(rvow_arima_res[orig+1:Tmax] < quants),
rvow_arima_res[rvow_arima_res[orig+1:Tmax][which(rvow_arima_resrvow_arima_res[orig+1:Tmax] < quants)], pch=16, col=2)
sum(rvow_arima_resrvow_arima_res[orig+1:Tmax] < quants)
sum(rvow_arima_resrvow_arima_res[orig+1:Tmax] < quants)/length(rvow_arima_res[orig+1:Tmax])
points(which(rvow_arima_res[orig+1:Tmax] < quants),
rvow_arima_res[rvow_arima_res[orig+1:Tmax][which(rvow_arima_res[orig+1:Tmax] < quants)], pch=16, col=2)
points(which(rvow_arima_res[orig+1:Tmax] < quants),
rvow_arima_res[rvow_arima_res[orig+1:Tmax][which(rvow_arima_res[orig+1:Tmax] < quants)], pch=16, col=2)
plot(rvow_arima_res[orig+1:Tmax])
plot(1:500, rvow_arima_res[orig+1:Tmax])
plot(1:501, rvow_arima_res[orig+1:Tmax])
length(rvow_arima_res[orig+1:Tmax])
orig+1
rvow_arima_res[orig+1:Tmax]
orig = 1500
Tmax = 2000
plot(1:501, rvow_arima_res[orig+1:Tmax])
rvow_arima_res[orig+1:Tmax]
rvow_arima_res
ts.plot(parameters_rvow_garch)
ts.plot(rvow_arima_res)
ts.plot(rvow_arima_res[1500:2000])
ts.plot(rvow_arima_res[orig+1:2000])
ts.plot(rvow_arima_res[(orig+1):2000])
plot(1:501, rvow_arima_res[(orig+1):Tmax])
plot(1:500, rvow_arima_res[(orig+1):Tmax])
ts.plot(rvow_arima_res[(orig+1):Tmax])
lines(quants <- qstd(0.01, mean=parameters_rvow_garch[,1], sd=parameters_rvow_garch[,6],
nu = parameters_rvow_garch[,5]), col = 2)
points(which(rvow_arima_res[(orig+1):Tmax] < quants),
rvow_arima_res[rvow_arima_res[(orig+1):Tmax][which(rvow_arima_res[(orig+1):Tmax] < quants)], pch=16, col=2)
which(rvow_arima_res[(orig+1):Tmax] < quants)
rvow_arima_res[rvow_arima_res[(orig+1):Tmax][which(rvow_arima_res[(orig+1):Tmax] < quants)]
)
rvow_arima_res[rvow_arima_res[(orig+1):Tmax]
rvow_arima_res[rvow_arima_res[(orig+1):Tmax]
rvow_arima_res[rvow_arima_res[(orig+1):Tmax][which(rvow_arima_res[(orig+1):Tmax] < quants)]]
rvow_arima_res[rvow_arima_res[(orig+1):Tmax][which(rvow_arima_res[(orig+1):Tmax] < quants)]
]
rvow_arima_res[rvow_arima_res[(orig+1):Tmax]][which(rvow_arima_res[(orig+1):Tmax] < quants)]
rvow_arima_res[(orig+1):Tmax][which(rvow_arima_res[(orig+1):Tmax] < quants)]
points(which(rvow_arima_res[(orig+1):Tmax] < quants),
rvow_arima_res[(orig+1):Tmax][which(rvow_arima_res[(orig+1):Tmax] < quants)], pch=16, col=2)
sum(rvow_arima_resrvow_arima_res[(orig+1):Tmax] < quants)
sum(rvow_arima_res[(orig+1):Tmax] < quants)
sum(rvow_arima_res[(orig+1):Tmax] < quants)/length(rvow_arima_res[orig+1:Tmax])
plot(zoo(parameters_rdai_garch))
ts.plot(rdai_arima_res[(orig+1):Tmax])
lines(quants <- qstd(0.01, mean=parameters_rdai_garch[,1], sd=parameters_rdai_garch[,6],
nu = parameters_rdai_garch[,5]), col = 2)
parameters_rdai_garch <- oos_estimation(data = rdai_arima_res,
model = rdai_garch, dist = "ged",
orig = orig, Tmax = Tmax)
plot(zoo(parameters_rdai_garch))
ts.plot(rdai_arima_res[(orig+1):Tmax])
lines(quants <- qstd(0.01, mean=parameters_rdai_garch[,1], sd=parameters_rdai_garch[,6],
nu = parameters_rdai_garch[,5]), col = 2)
parameters_rdai_garch[,5]
parameters_rdai_garch[,5]/(parameters_rdai_garch[,5]-2)
lines(quants <- qstd(0.01, mean=parameters_rdai_garch[,1], sd=parameters_rdai_garch[,6],
nu = parameters_rdai_garch[,5]), col = 2)
sqrt(parameters_rdai_garch[,5]/(parameters_rdai_garch[,5]-2))
lines(quants <- qged(0.01, mean=parameters_rdai_garch[,1], sd=parameters_rdai_garch[,6],
nu = parameters_rdai_garch[,5]), col = 2)
points(which(rdai_arima_res[(orig+1):Tmax] < quants),
rdai_arima_res[(orig+1):Tmax][which(rdai_arima_res[(orig+1):Tmax] < quants)], pch=16, col=2)
sum(rdai_arima_res[(orig+1):Tmax] < quants)
sum(rdai_arima_res[(orig+1):Tmax] < quants)/length(rdai_arima_res[orig+1:Tmax])
garchSim(garchSpec(cond.dist = "std"))
garchSim(spec = garchSpec(model = list(), cond.dist = "std", n=10)
)
garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10)
t(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))
replicate(10, t(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10)))
str(replicate(10, t(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))))
garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10)
as.data.frame(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))
t(as.data.frame(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10)))
str(replicate(10, t(as.data.frame(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))))
)
as.data.frame(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))
unlist(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))
as.numeric(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))
replicate(100, as.numeric(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10)))
replicate(100, t(as.numeric(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))))
replicate(100, as.numeric(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10)))
t(replicate(100, as.numeric(garchSim(spec = garchSpec(model = list(), cond.dist = "std"), n=10))))
garch_predictions <- t(replicate(10000, as.numeric(garchSim(
spec = garchSpec(model = list(), cond.dist = "std"), n=10))))
garch_predictions <- t(replicate(10000, as.numeric(garchSim(
spec = garchSpec(model = list(), cond.dist = "std"), n=10, n.start=30))))
garch_predictions <- t(replicate(10000, as.numeric(garchSim(
spec = garchSpec(model = list(), cond.dist = "std"), n=10, n.start=11))))
str(garch_predictions)
truehist(garch_predictions[,1])
par(mfrow = c(3,3))
for(i in 2:10){
truehist(garch_predictions[,i])
}
par(mfrow = c(3,3))
for(i in 2:10){
truehist(garch_predictions[,i], main=paste("Step:", i))
}
par(mfrow = c(3,3))
for(i in 2:10){
truehist(garch_predictions[,i], main=paste("Step:", i), xlab = "")
}
truehist(garch_predictions[,1])
par(mfrow = c(3,3))
for(i in 2:10){
truehist(garch_predictions[,i], main=paste("Step:", i), xlab = "", xlim=c(-0.04, 0.04))
}
fitdistr(garch_predictions[,1], "t")
params <- fitdistr(garch_predictions[,1], "t")
params
dt(seq(-0.04,0.04, 0.001), df = params[1], df = params[3], nco = params[2])
dt(seq(-0.04,0.04, 0.001), df = params[3], ncp = params[2])
params[1]
dt(seq(-0.04,0.04, 0.001), df = params$estimate[3], ncp = params$estimate[2])
dt(seq(-0.04,0.04, 0.0001), df = params$estimate[3], ncp = params$estimate[2])
truehist(garch_predictions[,1])
par(mfrow = c(1,1))
truehist(garch_predictions[,1])
lines(seq(-0.04,0.04, 0.001), dt(seq(-0.04,0.04, 0.001), df = params$estimate[3], ncp = params$estimate[1]))
plot(seq(-0.04,0.04, 0.001), dt(seq(-0.04,0.04, 0.001), df = params$estimate[3], ncp = params$estimate[1]))
params
truehist(garch_predictions[,1], prob = FALSE)
truehist(garch_predictions[,1], prob = TRUE)
qqplot(garch_predictions[,1], dt(seq(-0.04,0.04, 0.001), df = params$estimate[3], ncp = params$estimate[1]))
qqPlot(garch_predictions[,1], "t")
params$estimate
qqPlot(garch_predictions[,1], df = params$estimate[3])
qqPlot(garch_predictions[,1], dist = "t", df = params$estimate[3])
par(mfrow = c(1,2))
truehist(garch_predictions[,1], prob = TRUE)
qqPlot(garch_predictions[,1], dist = "t", df = params$estimate[3])
par(mfrow = c(1,2))
for(i in 2:10){
truehist(garch_predictions[,i], main=paste("Step:", i), xlab = "", xlim=c(-0.04, 0.04))
params <- fitdistr(garch_predictions[,i], "t")
qqPlot(garch_predictions[,i], dist = "t", df = params$estimate[3])
}
warnings()
install.packages("copula")
install.packages("copula")
install.packages("copula")
save.image("~/Uni/AnalyseFinanzDaten/Hausuebung/workspace.RData")
